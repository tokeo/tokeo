### **The {{ app_name }} Main Configuration Settings**<br/>
### <p>
### The tokeo.ext.appenv module handles the configuration loading and overriding mechanism for
### Tokeo and derivated applications. Each configuration file is based on YAML files with a
### hierarchical structure that supports environment-specific settings and local overrides.
### </p>
###
### ### Configuration File Hierarchy:
###
### <p>
### The configuration is loaded in the following order, with each file overriding
### settings from the previous ones:
### </p>
###
### 1. Base configuration: `config/{{ app_label }}.yaml`
### 1. Environment-specific configuration: `config/{{ app_label }}.[environment].yaml`
### 1. Local environment-specific configuration: `config/{{ app_label }}.[environment].local.yaml`
###
### <p>
### Where `[environment]` can be one of:
### </p>
###
### - `development` - Used during development
### - `testing` - Used for testing environments
### - `production` - Used in production deployments
###
### ### Overloading Configuration:
###
### <p>
### The overloading mechanism allows for partial settings to be defined in environment-specific
### or local configuration files. Only the specified settings will be overridden, while all other
### settings will be inherited from the base configuration.
### </p>
###
### <p>
### Example:
### </p>
###
### - Base config.yaml defines ```smtp.host: localhost```
### - Production config.yaml defines ```smtp.host: production.host.domain```
### - When running in production mode, ```smtp.host``` will be ```production.host.domain```
### - All other smtp settings from the base config.yaml remain unchanged
###
### ### Extende Local Configuration Files:
###
### <p>
### Local configuration files (ending with `.local.yaml`) are used for environment-specific
### secrets and settings that should not be checked into source control. These files should
### be left added to `.gitignore`.
### </p>
---



### ### Core Application Configuration
###
### Main {{ app_name }} application settings including debugging, plugins, and template locations
{{ app_label }}:
  ### Toggle application level debug (does not toggle framework debugging)
  # debug: false
  ### Where external (third-party) plugins are loaded from
  # plugin_dir: /var/lib/{{ app_label }}/plugins/
  ### Where all plugin configurations are loaded from
  # plugin_config_dir: /etc/{{ app_label }}/plugins.d/
  ### Where external templates are loaded from
  # template_dir: /var/lib/{{ app_label }}/templates/



### ### Jinja2 Template Configuration
###
### Settings for Jinja2 templating engine behavior and template locations
jinja2:
  # preserve the trailing newline when rendering templates.
  keep_trailing_newline: true
  # If this is set to True the first newline after a block is removed
  # (block, not variable tag!)
  trim_blocks: true
  # extra where to find templates
  # template_dirs:
  #   - extra/templates



### ### Dramatiq Task Queue Configuration
###
### Settings for Dramatiq task processing system including workers,
### brokers, and queue management
dramatiq:
  ### module and method to launch dramatiq serve service
  serve: {{ app_label }}.main:dramatiq
  ### actors module to launch with services
  actors: {{ app_label }}.core.tasks.actors
  ### number of processes to run the dramatiq workers
  worker_processes: 2
  ### number of threads to run the dramatiq workers
  worker_threads: 2
  ### number of milliseconds to timeout for worker shutdown
  worker_shutdown_timeout: 600_000
  ### number of milliseconds before restarting consumers
  ### after a connection error
  restart_delay: 3000
  ### The number of messages to prefetch from the queue for each worker.
  ### In-progress messages are included in the count. When set to "1",
  ### a new message is only fetched once a previous one is done. If not
  ### or "0" provided, two times the number of configured worker threads
  ### are prefetched.
  queue_prefetch: 0
  ### The number of messages to prefetch from the delay queue for each worker.
  ### When set to "1", a new message is only fetched once a previous one is done.
  ### If not provided or "0", a thousand times the number of configured worker
  ### threads are prefetched.
  delay_queue_prefetch: 0

  ### broker to use for backend
  broker: rabbitmq
  ### connection url to rabbitmq server
  rabbitmq_url: amqp://guest:guest@localhost:5672/
  ### mark lock keys by tag
  locks_tag: dramatiq_locks
  ### mark lock keys with prefix
  locks_key_prefix: dq_



### ### gRPC Service Configuration
###
### Settings for gRPC API service connectivity and implementation
grpc:
  ### serve and connect to the grpc service
  url: localhost:50051
  ### Thread Pool max-workers for grpc service
  max_worker: 2
  ### module and method to launch grpc server
  proto_add_servicer_to_server: {{ app_label }}.core.grpc.proto.{{ app_label }}_pb2_grpc:add_{{ app_class_name }}Servicer_to_server
  ### module and servicer for grpc implementations
  grpc_servicer: {{ app_label }}.core.grpc.{{ app_label }}_servicer:{{ app_class_name }}Servicer



### ### Disk Cache Configuration
###
### Settings for persistent disk-based cache storage and locking mechanisms
diskcache:
  ### file path to store permanent data content
  directory: ./{{ app_label }}_diskcache
  ### default connection timeout
  timeout: 60
  ### mark lock keys by tag
  locks_tag: diskcache_locks
  ### mark lock keys with prefix
  locks_key_prefix: dc_



### ### PocketBase Database Configuration
###
### Settings for PocketBase database connectivity
pocketbase:
  ### connection string to database
  url: http://127.0.0.1:8090



### ### SMTP Email Configuration
###
### Settings for email delivery including server connectivity, message formatting,
### and default recipients
smtp:
  ### define one or more standard recipients
  # to: null
  ### define the senders address
  # from_addr: no-reply@example.com
  ### define one or more carbon copy recipients
  # cc: null
  ### define one or more blind copy recipients
  # bcc: null
  ### define a default subject
  # subject: null
  ### define a defeault prefix on subjects
  # subject_prefix: null
  ### SMTP server address to connect for service
  host: localhost
  ### SMTP port to connect for service
  port: 25
  ### default timeout when connection will cause an error
  timeout: 30
  ### enable SSL connection
  # ssl: false
  ### enable TLS on connection, available for SSL and non SSL connections
  tls: true
  ### enable authentication for service
  # auth: false
  ### auth username
  # username: null
  ### auth password
  # password: null
  ### attach one or more files by default to the messages
  # files: null
  ### define the characterset for message
  # charset: utf-8
  ### define the encoding of headers qp|base64
  # header_encoding: null
  ### define the encoding of bodies qp|base64
  # body_encoding: null
  ### check for Date field and append if not exist
  # date_enforce: True
  ### check for Message-Id and append if not exist
  # msgid_enforce: True
  ### some prepend string for Message-Id
  # msgid_str: null
  ### define the domain for Message-Id (null use current server.domain)
  # msgid_domain: localhost



### ### Scheduler Configuration
###
### Settings for scheduled task execution using crontab-style scheduling
###
### <p>
### <br/>
### Crontab schema:
### </p>
### : Min, Hour, Day (Month), Month, Day (Week)
###
### <p>
### Examples:
### </p>
###
### - '*'    means 'every'
### - '*/10' means 'every tens, e.g. every 10 minutes'
### - '1'    means at fix value '1'
### - '5,25,40' means at '5 and 25 and 40'
### - 'SUN-SAT' means day of week, alternative '0-6'
scheduler:
  ### number of concurrent running tasks overall
  max_concurrent_jobs: 5
  ### the default time zone
  timezone: UTC
  ### list of tasks to plan in a crontab style defined by it's key
  tasks:
    ### each entry is defined by its method to call
    count_words_timer:
      ### module where the method is located
      module: {{ app_label }}.core.tasks.agents
      ### a name for the entry in schedule list
      name: count-word timer
      ### what to do if multiple run times occur until task starts (earliest, latest, all)
      coalesce: latest
      ### maximum number of seconds the scheduled jobâ€™s actual run time is allowed to be late
      misfire_grace_time: null
      ### number of seconds to add to the scheduled time for each job
      delay: null
      ### maximum number of seconds to randomly add to the scheduled time for each job
      max_jitter: null
      ###  maximum number of instances of the task that are allowed to run concurrently
      max_running_jobs: null
      ### one or multiple entries in crontab style when to run the task
      crontab: '*/5 * * * *'
      ### optional arguments send by named args to the method
      kwargs:
        url: https://github.com



### ### Automation Tasks Configuration
###
### Settings for defining automation tasks that can be run on-demand
automate:
  ### list of hosts reference
  hosts:
    local:
      ### define shell for local tasks
      shell: /bin/sh
  ### list of tasks
  tasks:
    ### default module for tasks implementations if not specified other
    module: {{ app_label }}.core.tasks.automate
    ### simplest `count_words` task configuration by just an empty dict
    count_words: {}
    ### `uname` task configuration with arguments config
    uname:
      kwargs:
        flags:
          - '-a'



### ### NiceGUI Web Interface Configuration
###
### Settings for the NiceGUI web framework and interface behavior
nicegui:
  ### serve the web service
  host: '127.0.0.1'
  ### port for serving the web service
  port: 8080
  ### main module with apis to serve
  apis: {{ app_label }}.site.apis
  ### main module with routes to serve
  routes: {{ app_label }}.site.routes
  ### name of default route (/) function
  default_route: default
  ### web page title
  title: {{ app_name }} Site
  ### relative filepath or absolute URL to a favicon
  favicon: public/favicon.ico
  ### page meta viewport content
  viewport: width=device-width, initial-scale=1
  ### whether to use Quasar's dark mode (True, False, null = Auto)
  dark: null
  ### use tailwindcss
  tailwind: true
  ### use the production version of Vue and Quasar dependencies
  prod_js: true
  ### print your own welcome message on startup
  welcome_message: null
  ### control what endpoints appear in the autogenerated OpenAPI docs
  endpoint_documentation: null
  ### secret key for browser-based storage
  storage_secret: null
  ### time between binding updates
  binding_refresh_interval: 0.5
  ### maximum time the server waits for the browser to reconnect
  reconnect_timeout: 5.0
  ### root dir to watch for hotload on file changes, null = pages root
  hotload_dir: null
  ### file mask(s) to include for watch
  hotload_includes: '*.py'
  ### file mask(s) to explecitely exclude
  hotload_excludes: '.*, .py[cod], .sw.*, ~*'
  ### logging level for uvicorn server
  logging_level: warning



### ### PDoc Documentation Generator Configuration
###
### Settings for the PDoc Python documentation generator and server
pdoc:
  ### modules to render (str | list), app and test as default
  modules: null
  ### render content into output directory
  output_dir: html
  ### serve the pdoc service
  host: '127.0.0.1'
  ### port for serving the pdoc service
  port: 9999
  ### relative filepath or absolute URL to a favicon
  favicon: public/favicon.ico
  ### module or absolute path to the mako templates
  templates:
    - {{ app_label }}.templates.pdoc.html
    - tokeo.templates.pdoc.html



### ### Logging Configuration
###
### Settings for application logging using the colorlog package
log.colorlog:
  ### Where the log file lives (no log file by default)
  file: null
  ### The level for which to log.  One of: info, warning, error, fatal, debug
  level: info
  ### Whether or not to log to console
  to_console: true
  ### Whether or not to rotate the log file when it reaches `max_bytes`
  # rotate: false
  ### Max size in bytes that a log file can grow until it is rotated.
  # max_bytes: 512000
  ### The maximum number of log files to maintain when rotating
  # max_files: 4
